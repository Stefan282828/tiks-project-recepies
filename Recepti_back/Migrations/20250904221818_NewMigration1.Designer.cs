// <auto-generated />
using FoodExplorer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Recepti.Migrations
{
    [DbContext(typeof(FoodExplorerContext))]
    [Migration("20250904221818_NewMigration1")]
    partial class NewMigration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FoodExplorer.Models.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("FoodExplorer.Models.Podkategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KategorijaId")
                        .HasColumnType("integer");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Podkategorije");
                });

            modelBuilder.Entity("FoodExplorer.Models.Recept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PodKategorijaId")
                        .HasColumnType("integer");

                    b.Property<string>("UputstvoPripreme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VremePripreme")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PodKategorijaId");

                    b.ToTable("Recepti");
                });

            modelBuilder.Entity("FoodExplorer.Models.Sastojak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("JedinicaMere")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Kolicina")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Sastojci");
                });

            modelBuilder.Entity("ReceptSastojak", b =>
                {
                    b.Property<int>("ReceptId")
                        .HasColumnType("integer");

                    b.Property<int>("SastojakId")
                        .HasColumnType("integer");

                    b.Property<string>("JedinicaMere")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Kolicina")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ReceptId", "SastojakId");

                    b.HasIndex("SastojakId");

                    b.ToTable("ReceptSastojci");
                });

            modelBuilder.Entity("FoodExplorer.Models.Podkategorija", b =>
                {
                    b.HasOne("FoodExplorer.Models.Kategorija", "Kategorija")
                        .WithMany("Podkategorije")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("FoodExplorer.Models.Recept", b =>
                {
                    b.HasOne("FoodExplorer.Models.Podkategorija", "Podkategorija")
                        .WithMany("Recepti")
                        .HasForeignKey("PodKategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podkategorija");
                });

            modelBuilder.Entity("ReceptSastojak", b =>
                {
                    b.HasOne("FoodExplorer.Models.Recept", "Recept")
                        .WithMany("ReceptSastojci")
                        .HasForeignKey("ReceptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodExplorer.Models.Sastojak", "Sastojak")
                        .WithMany("Recepti")
                        .HasForeignKey("SastojakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recept");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("FoodExplorer.Models.Kategorija", b =>
                {
                    b.Navigation("Podkategorije");
                });

            modelBuilder.Entity("FoodExplorer.Models.Podkategorija", b =>
                {
                    b.Navigation("Recepti");
                });

            modelBuilder.Entity("FoodExplorer.Models.Recept", b =>
                {
                    b.Navigation("ReceptSastojci");
                });

            modelBuilder.Entity("FoodExplorer.Models.Sastojak", b =>
                {
                    b.Navigation("Recepti");
                });
#pragma warning restore 612, 618
        }
    }
}
